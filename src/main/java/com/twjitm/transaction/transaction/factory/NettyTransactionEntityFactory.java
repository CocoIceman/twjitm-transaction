package com.twjitm.transaction.transaction.factory;import com.twjitm.transaction.config.GlobalConstants;import com.twjitm.transaction.service.redis.NettyTransactionRedisService;import com.twjitm.transaction.transaction.entity.NettyReadTransactionEntity;import com.twjitm.transaction.transaction.enums.NettyTransactionEntityCause;import org.springframework.stereotype.Service;/** * netty 事物实体工厂类 * * @author EGLS0807 - [Created on 2018-08-27 15:06] * @company http://www.g2us.com/ * @jdk java version "1.8.0_77" */@Servicepublic class NettyTransactionEntityFactory {    /**     * 获取通用读锁实体 默认不能读取到     *     * @return     */    public static NettyReadTransactionEntity createNettyReadRejectTransactionEnity(            NettyTransactionEntityCause cause, NettyTransactionRedisService redisService,            String redisKey, String unionKey) {        NettyReadTransactionEntity nettyReadTransactionEntity = createNormalNettyReadTransactionEntity(cause, redisService, redisKey, unionKey);        nettyReadTransactionEntity.setRejectFlag(true);        return nettyReadTransactionEntity;    }    /**     * 获取通用读锁实体 默认需要读取到     *     * @return     */    public static NettyReadTransactionEntity createNormalNettyReadTransactionEntity(            NettyTransactionEntityCause cause, NettyTransactionRedisService redisService, String redisKey,            String unionKey) {        String key = getNettyTransactionEntityKey(                cause, redisKey, unionKey);        return new NettyReadTransactionEntity(cause, key, redisService);    }    /**     * 获得通用事物实体key     *     * @param cause     * @param RedisKey     * @param union     * @return     */    public static String getNettyTransactionEntityKey(NettyTransactionEntityCause cause, String RedisKey, String union) {        return RedisKey + cause.getCause() + GlobalConstants.Strings.COMMON_SPLIT_STRING + union;    }}