package com.twjitm.transaction.transaction.entity;import com.twjitm.transaction.lock.NettyTransactionLockInterface;import com.twjitm.transaction.transaction.enums.NettyTransactionCommitResult;import com.twjitm.transaction.transaction.exception.NettyTransactionException;/** * @author EGLS0807 - [Created on 2018-08-27 10:16] * @company http://www.g2us.com/ * @jdk java version "1.8.0_77" */public interface NettyTransactionEntityInterface {    /**     * 事物提交后需要执行的逻辑，提交这个事物主要     * 的业务逻辑     *     * @throws NettyTransactionException     */    void commit() throws NettyTransactionException;    /**     * 回滚,事务在执行过程中发生异常后需要回滚操作的逻辑     *     * @throws NettyTransactionException     */    void rollback() throws NettyTransactionException;    /**     * 尝试性提交     */    NettyTransactionCommitResult tryCommit() throws NettyTransactionException;    /**     * 是否可以创建锁     *     * @return     */    boolean createNettyTransactionLock(long seconds) throws NettyTransactionException;    /**     * 释放锁     *     * @return     */    void releaseNettyTransactionLock();    /**     * 强制释放锁     *     * @return     */    void forceReleaseNettyTransactionLock();    String getInfo();    /**     * 是否需要执行     *     * @return     */    boolean needCommit();    /**     * 获取锁内容     *     * @return     */    NettyTransactionLockInterface getNettyTransactionLockInterface();}