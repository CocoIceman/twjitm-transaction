package com.twjitm.transaction.transaction.enums;import com.twjitm.transaction.lock.NettyTransactionLock;import com.twjitm.transaction.service.redis.NettyTransactionRedisService;/** * 事物锁状态,每个事务锁在不同阶段的不同状态，当一个事务锁被 * 构造的时候，将初始化为INIT这个状态。 * 如：{@link NettyTransactionLock#NettyTransactionLock(String, NettyTransactionRedisService, NettyTransactionEntityCause)} * <p> * 不同参数的构造器。通过不同状态的锁标识，表示事物锁进展到的具体步骤。 * 给事物锁创造一个原子环境，同时提供给上层一个事物3pc可靠的基础 * * @author EGLS0807 - [Created on 2018-08-27 14:18] * @company http://www.g2us.com/ * @jdk java version "1.8.0_77" */public enum NettyTransactionLockStateEnum {    /**     * 初始化     */    INIT,    /**     * 创建     */    CREATE,    /**     * 成功     */    SUCCESS,}