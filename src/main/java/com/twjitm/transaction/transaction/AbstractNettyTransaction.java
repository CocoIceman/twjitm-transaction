package com.twjitm.transaction.transaction;import com.twjitm.transaction.transaction.entity.NettyTransactionEntityInterface;import com.twjitm.transaction.transaction.enums.NettyTransactionCause;import com.twjitm.transaction.transaction.enums.NettyTransactionCommitResult;import java.util.ArrayList;import java.util.List;/** * @author EGLS0807 - [Created on 2018-08-27 10:13] * @company http://www.g2us.com/ * @jdk java version "1.8.0_77" */public abstract class AbstractNettyTransaction implements NettyTransactionInterface {    /**     * 当前执行状态     */    protected int state;    /**     * 事务实体 可以批量提交事物     */    public List<NettyTransactionEntityInterface> entities;    /**     * 事务原因     */    private NettyTransactionCause cause;    /**     * 游戏事务提交结果     */    protected NettyTransactionCommitResult transactionTryCommitResult;    public AbstractNettyTransaction(NettyTransactionCause cause) {        this.cause = cause;        this.entities = new ArrayList<>();        transactionTryCommitResult = NettyTransactionCommitResult.SUCCESS;        this.state = ACTIVE;    }    public void addEntity(NettyTransactionEntityInterface entity) {        entities.add(entity);    }    @Override    public NettyTransactionCause getCause() {        return cause;    }    @Override    public boolean canCommit() {        return transactionTryCommitResult.equals(NettyTransactionCommitResult.SUCCESS);    }    public NettyTransactionCommitResult getTransactionTryCommitResult() {        return transactionTryCommitResult;    }}